services:
  db:
    container_name: pgvector-container
    image: pgvector/pgvector:pg16
    ports:
      - "${datasource_port}:5432"
    environment:
      - POSTGRES_USER=${datasource_username}
      - POSTGRES_PASSWORD=${datasource_password}
      - POSTGRES_DB=${datasource_name}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${datasource_username} -d ${datasource_name}"]
      interval: 10s
      timeout: 5s
      retries: 5

  embeddings:
    build:
      context: .
      dockerfile: embeddings.Dockerfile
    container_name: embeddings-service
    environment:
      - datasource_username=${datasource_username}
      - datasource_password=${datasource_password}
      - datasource_host=db
      - datasource_port=5432
      - datasource_name=${datasource_name}
      - open_ai_api_key=${open_ai_api_key}
      - data_path=/app/src/documents
    # volumes:
    #   - ./documents:/app/documents
    depends_on:
      db:
        condition: service_healthy

  app:
    build:
      context: .
      dockerfile: chainlit.Dockerfile
    container_name: chainlit-app
    ports:
      - "3500:3500"
    environment:
      - datasource_username=${datasource_username}
      - datasource_password=${datasource_password}
      - datasource_host=db
      - datasource_port=5432
      - datasource_name=${datasource_name}
      - open_ai_api_key=${open_ai_api_key}
      - CHAINLIT_AUTH_SECRET=${CHAINLIT_AUTH_SECRET}
      - data_path=/app/src/documents
    # volumes:
    #   - ./documents:/app/documents
    depends_on:
      embeddings:
        condition: service_completed_successfully

volumes:
  pgdata: