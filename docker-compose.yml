version: '3.8'

services:
  db:
    container_name: rag-db
    image: ankane/pgvector:v0.5.1
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  embeddings:
    build:
      context: .
      dockerfile: embeddings.Dockerfile
    container_name: embeddings-service
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - GROQ_API_KEY=${GROQ_API_KEY}
    depends_on:
      db:
        condition: service_healthy

  app:
    build:
      context: .
      dockerfile: chainlit.Dockerfile
    container_name: chainlit-app
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - CHAINLIT_AUTH_SECRET=${CHAINLIT_AUTH_SECRET}
    depends_on:
      embeddings:
        condition: service_completed_successfully

volumes:
  pgdata:
